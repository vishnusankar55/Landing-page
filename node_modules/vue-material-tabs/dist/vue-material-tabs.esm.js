function calc(e) {
  const offset = e.currentTarget.getBoundingClientRect();
  const localX = e.clientX - offset.left;
  const localY = e.clientY - offset.top;
  const radius = Math.sqrt(e.currentTarget.clientWidth ** 2 + e.currentTarget.clientHeight ** 2) / 2;
  const left = `${localX - radius}px`;
  const top = `${localY - radius}px`;
  const size = `${radius * 2}px`;
  return {
    left,
    top,
    size
  };
}

function mountRipple(e) {
  const {
    size,
    left,
    top
  } = calc(e);
  const rippleElement = document.createElement("span");
  rippleElement.classList.add("ripple");
  Object.assign(rippleElement.style, {
    height: size,
    width: size,
    top,
    left
  });
  e.currentTarget.appendChild(rippleElement);
  setTimeout(() => rippleElement.remove(), 1000);
}

function bind$1(el, bidding) {
  bidding.value ? el.addEventListener("click", mountRipple) : el.removeEventListener("click", mountRipple);
}

function unbind$2(el) {
  el.removeEventListener("click", mountRipple);
}

var ripple = {
  bind: bind$1,
  update: bind$1,
  unbind: unbind$2
};

function inserted(el, binding) {
  var _binding$value2, _binding$modifiers2;

  let timeoutId = 0;

  const onResize = callback => () => {
    var _binding$value;

    clearTimeout(timeoutId);
    timeoutId = setTimeout(callback, Number((_binding$value = binding.value) === null || _binding$value === void 0 ? void 0 : _binding$value.delay) || 400);
  };

  if (typeof binding.value === "function") {
    var _binding$modifiers;

    el._onResize = (_binding$modifiers = binding.modifiers) !== null && _binding$modifiers !== void 0 && _binding$modifiers.debounce ? onResize(binding.value) : binding.value;
  } else if (typeof ((_binding$value2 = binding.value) === null || _binding$value2 === void 0 ? void 0 : _binding$value2.cb) === "function" && (_binding$modifiers2 = binding.modifiers) !== null && _binding$modifiers2 !== void 0 && _binding$modifiers2.debounce) {
    el._onResize = onResize(binding.value.cb);
  }

  window.addEventListener("resize", el._onResize);
}

function unbind$1(el) {
  window.removeEventListener("resize", el._onResize);
  delete el._onResize;
}

var resize = {
  inserted,
  unbind: unbind$1
};

function touchMove(event, el) {
  if (!el._onTouch.isSwiping) return;
  const touchendX = event.changedTouches[0].clientX;
  const minTouch = Math.abs(el.offsetWidth * 0.1);
  const diffX = el._onTouch.touchstartX - touchendX;

  const switchTo = to => {
    el._onTouch.isSwiping = false;

    el._onTouch.callback(to);
  };

  diffX > minTouch && switchTo("next");
  diffX < -minTouch && switchTo("prev");
}

function bind(el, binding) {
  if (typeof binding.value !== "function") return;
  el._onTouch = {
    callback: binding.value,
    isSwiping: false,
    touchstartX: 0,

    onTouchStart(event) {
      this._onTouch.isSwiping = true;
      this._onTouch.touchstartX = event.touches[0].clientX;
    },

    onTouchMove(event) {
      return touchMove(event, el);
    }

  };
  el.addEventListener("touchstart", el._onTouch.onTouchStart);
  el.addEventListener("touchmove", el._onTouch.onTouchMove);
}

function unbind(el) {
  if (!el._onTouch) return;
  el.removeEventListener("touchstart", el._onTouch.onTouchStart);
  el.removeEventListener("touchmove", el._onTouch.onTouchMove);
  delete el._onTouch;
}

var touch = {
  bind,
  unbind
};

//
//
//
//
//
//
//
//
var script$3 = {
  name: "Btn",
  inject: ["theme"]
};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

const isOldIE = typeof navigator !== 'undefined' &&
    /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
function createInjector(context) {
    return (id, style) => addStyle(id, style);
}
let HEAD;
const styles = {};
function addStyle(id, css) {
    const group = isOldIE ? css.media || 'default' : id;
    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });
    if (!style.ids.has(id)) {
        style.ids.add(id);
        let code = css.source;
        if (css.map) {
            // https://developer.chrome.com/devtools/docs/javascript-debugging
            // this makes source maps inside style tags work properly in Chrome
            code += '\n/*# sourceURL=' + css.map.sources[0] + ' */';
            // http://stackoverflow.com/a/26603875
            code +=
                '\n/*# sourceMappingURL=data:application/json;base64,' +
                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +
                    ' */';
        }
        if (!style.element) {
            style.element = document.createElement('style');
            style.element.type = 'text/css';
            if (css.media)
                style.element.setAttribute('media', css.media);
            if (HEAD === undefined) {
                HEAD = document.head || document.getElementsByTagName('head')[0];
            }
            HEAD.appendChild(style.element);
        }
        if ('styleSheet' in style.element) {
            style.styles.push(code);
            style.element.styleSheet.cssText = style.styles
                .filter(Boolean)
                .join('\n');
        }
        else {
            const index = style.ids.size - 1;
            const textNode = document.createTextNode(code);
            const nodes = style.element.childNodes;
            if (nodes[index])
                style.element.removeChild(nodes[index]);
            if (nodes.length)
                style.element.insertBefore(textNode, nodes[index]);
            else
                style.element.appendChild(textNode);
        }
    }
}

/* script */
const __vue_script__$3 = script$3;
/* template */

var __vue_render__$3 = function () {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('button', {
    staticClass: "vmt__btn",
    on: {
      "click": function ($event) {
        return _vm.$emit('click');
      }
    }
  }, [_c('svg', {
    style: {
      fill: _vm.theme.arrow
    },
    attrs: {
      "viewBox": "0 0 24 24",
      "role": "img",
      "aria-hidden": "true"
    }
  }, [_c('path', {
    attrs: {
      "d": "M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
    }
  })])]);
};

var __vue_staticRenderFns__$3 = [];
/* style */

const __vue_inject_styles__$3 = function (inject) {
  if (!inject) return;
  inject("data-v-c67981d6_0", {
    source: ".vmt__btn[data-v-c67981d6]{outline:0;border:none;background:0 0;cursor:pointer}.vmt__btn svg[data-v-c67981d6]{height:24px;width:24px;fill:rgba(214,213,213,.925)}.vmt__btn:disabled svg[data-v-c67981d6]{fill:#d6d6d652!important;cursor:default}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


const __vue_scope_id__$3 = "data-v-c67981d6";
/* module identifier */

const __vue_module_identifier__$3 = undefined;
/* functional template */

const __vue_is_functional_template__$3 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$3 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$3,
  staticRenderFns: __vue_staticRenderFns__$3
}, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, false, createInjector, undefined, undefined);

//
var script$2 = {
  inject: ["theme"],
  components: {
    Btn: __vue_component__$3,
    VNode: {
      functional: true,
      render: (h, {
        props
      }) => {
        return props.node ? props.node : h("span", props.name);
      }
    }
  },
  directives: {
    ripple,
    resize,
    touch
  },
  props: {
    vertical: Boolean,
    navSlider: Boolean,
    ripple: Boolean,
    navAuto: Boolean,
    navItems: {
      type: Array,
      required: true
    },
    tabItemActive: {
      type: Object,
      default: () => {}
    }
  },
  data: () => ({
    pagination: {
      has: false,
      maxOffset: 0,
      minOffset: 0,
      translate: 0,
      offset: 0
    }
  }),
  computed: {
    classes() {
      return {
        vmt__nav: true,
        "vmt__nav--vertical": this.vertical,
        "vmt__nav--auto": this.navAuto && !this.vertical
      };
    },

    transform() {
      return `transform: translate${this.vertical ? "Y" : "X"}(-${this.pagination.translate}px)`;
    },

    paginateIndicator() {
      const {
        translate,
        maxOffset
      } = this.pagination;
      return {
        next: translate < maxOffset,
        prev: translate > 0
      };
    },

    orientation() {
      return this.vertical ? "portrait" : "landscape";
    },

    sliderElement() {
      var _this$$refs;

      return (_this$$refs = this.$refs) === null || _this$$refs === void 0 ? void 0 : _this$$refs.slider;
    }

  },
  watch: {
    navItems: "resizable",

    // Force recalc the pagination offsets
    // when the orientation/navItems is change;
    vertical() {
      Object.assign(this.$data, this.$options.data());
      this.resizable();
    },

    tabItemActive(tabItemActive) {
      this.setSliderPosition();

      if (this.pagination.has && tabItemActive !== null && tabItemActive !== void 0 && tabItemActive.model) {
        var _navItemActiveElement, _navElement$getClient;

        const navItemActiveElement = this.$refs[tabItemActive.model][0];
        const navElement = this.$refs.nav;
        const navActiveItemRectsCollection = navItemActiveElement === null || navItemActiveElement === void 0 ? void 0 : (_navItemActiveElement = navItemActiveElement.getClientRects()) === null || _navItemActiveElement === void 0 ? void 0 : _navItemActiveElement[0];
        const navRectsCollection = navElement === null || navElement === void 0 ? void 0 : (_navElement$getClient = navElement.getClientRects()) === null || _navElement$getClient === void 0 ? void 0 : _navElement$getClient[0];
        if (!navActiveItemRectsCollection || !navRectsCollection) return;
        const {
          translate,
          maxOffset
        } = this.pagination;
        let toTranslate = translate; // Portrait

        if (this.orientation === "portrait") {
          if (navActiveItemRectsCollection.bottom > navRectsCollection.bottom) {
            toTranslate = toTranslate + navActiveItemRectsCollection.height;
          }

          if (navActiveItemRectsCollection.top < navRectsCollection.top) {
            toTranslate = navActiveItemRectsCollection.height > toTranslate ? 0 : toTranslate - navActiveItemRectsCollection.height;
          }
        }

        if (this.orientation === "landscape") {
          if (navActiveItemRectsCollection.right > navRectsCollection.right) {
            toTranslate = toTranslate + navActiveItemRectsCollection.width;
          }

          if (navActiveItemRectsCollection.left < navRectsCollection.left) {
            toTranslate = navActiveItemRectsCollection.width > toTranslate ? 0 : toTranslate - navActiveItemRectsCollection.width;
          }

          if (toTranslate > maxOffset) {
            toTranslate = toTranslate + (maxOffset - toTranslate);
          }
        }

        this.pagination.translate = Math.abs(toTranslate);
      }
    }

  },

  mounted() {
    const {
      nav,
      navItem,
      slider
    } = this.theme;
    this.$el.style.background = nav;
    this.$refs.navItems.style.color = navItem;
    if (this.sliderElement) this.sliderElement.style.background = slider;
  },

  methods: {
    select(navItem) {
      this.$emit("select", navItem);
    },

    async setSliderPosition() {
      var _this$tabItemActive, _this$$refs$navItems, _this$$refs$navItems$, _this$$refs$model$, _this$$refs$model$$ge;

      await this.$nextTick();
      const model = (_this$tabItemActive = this.tabItemActive) === null || _this$tabItemActive === void 0 ? void 0 : _this$tabItemActive.model;
      if (!model) return;
      const navItemsRectsCollection = (_this$$refs$navItems = this.$refs.navItems) === null || _this$$refs$navItems === void 0 ? void 0 : (_this$$refs$navItems$ = _this$$refs$navItems.getClientRects()) === null || _this$$refs$navItems$ === void 0 ? void 0 : _this$$refs$navItems$[0];
      const navActiveItemRectsCollection = (_this$$refs$model$ = this.$refs[model][0]) === null || _this$$refs$model$ === void 0 ? void 0 : (_this$$refs$model$$ge = _this$$refs$model$.getClientRects()) === null || _this$$refs$model$$ge === void 0 ? void 0 : _this$$refs$model$$ge[0];

      if (this.sliderElement) {
        var _this$sliderElement;

        Object.assign((_this$sliderElement = this.sliderElement) === null || _this$sliderElement === void 0 ? void 0 : _this$sliderElement.style, {
          portrait: {
            height: navActiveItemRectsCollection.height + "px",
            top: navActiveItemRectsCollection.top - navItemsRectsCollection.top + "px",
            width: "",
            left: ""
          },
          landscape: {
            width: navActiveItemRectsCollection.width + "px",
            left: navActiveItemRectsCollection.left - navItemsRectsCollection.left + "px",
            height: "",
            top: ""
          }
        }[this.orientation]);
      }
    },

    setPaginationSettings() {
      var _this$$refs2;

      const paginationRefactory = (has, maxOffset, minOffset) => ({
        has,
        maxOffset,
        minOffset,
        offset: minOffset
      });

      const navElement = this.$refs.nav;
      const navElementWidth = navElement === null || navElement === void 0 ? void 0 : navElement.offsetWidth;
      const navElementHeight = navElement === null || navElement === void 0 ? void 0 : navElement.offsetHeight;
      const navItemsElement = (_this$$refs2 = this.$refs) === null || _this$$refs2 === void 0 ? void 0 : _this$$refs2.navItems;
      const navItemsElementWidth = navItemsElement === null || navItemsElement === void 0 ? void 0 : navItemsElement.offsetWidth;
      const navItemsElementHeight = [...(navItemsElement === null || navItemsElement === void 0 ? void 0 : navItemsElement.children)].slice(0, -1).reduce((previousValue, currentValue) => previousValue + currentValue.offsetHeight, 0);
      Object.assign(this.pagination, {
        portrait: paginationRefactory(navItemsElementHeight > navElementHeight, navItemsElementHeight - navElementHeight, navElementHeight),
        landscape: paginationRefactory(navItemsElementWidth > navElementWidth, navItemsElementWidth - navElementWidth, navElementWidth)
      }[this.orientation]);

      if (this.pagination.maxOffset === 0) {
        this.pagination.translate = 0;
      }
    },

    paginationTo(to) {
      const {
        maxOffset,
        offset,
        translate,
        minOffset
      } = this.pagination;

      if (to === "prev" && this.paginateIndicator.prev) {
        if (offset <= minOffset) {
          this.pagination.offset = minOffset;
        }

        if (translate - offset < offset) {
          this.pagination.translate = 0;
          return;
        }

        this.pagination.translate = translate - offset;
      }

      if (to === "next" && this.paginateIndicator.next) {
        if (translate + offset > maxOffset) {
          this.pagination.offset = maxOffset - translate;
        }

        this.pagination.translate = translate + this.pagination.offset;
      }
    },

    async resizable() {
      await this.$nextTick();
      this.setPaginationSettings();
      this.setSliderPosition();
    },

    getActiveColor({
      model
    }) {
      if (model === this.tabItemActive.model) {
        return {
          color: this.theme.navActiveItem
        };
      }
    }

  }
};

/* script */
const __vue_script__$2 = script$2;
/* template */

var __vue_render__$2 = function () {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    directives: [{
      name: "resize",
      rawName: "v-resize.debounce",
      value: _vm.resizable,
      expression: "resizable",
      modifiers: {
        "debounce": true
      }
    }],
    class: _vm.classes
  }, [_c('div', {
    staticClass: "vmt__nav__prev"
  }, [_vm.pagination.has ? _c('Btn', {
    attrs: {
      "disabled": !_vm.paginateIndicator.prev
    },
    on: {
      "click": function ($event) {
        return _vm.paginationTo('prev');
      }
    }
  }) : _vm._e()], 1), _vm._v(" "), _c('nav', {
    directives: [{
      name: "touch",
      rawName: "v-touch",
      value: _vm.paginationTo,
      expression: "paginationTo"
    }],
    ref: "nav",
    staticClass: "tab__nav"
  }, [_c('ul', {
    ref: "navItems",
    staticClass: "vmt__nav__items",
    style: _vm.transform
  }, [_vm._l(_vm.navItems, function (navItem) {
    return _c('li', {
      directives: [{
        name: "ripple",
        rawName: "v-ripple",
        value: _vm.ripple && !navItem.disabled,
        expression: "ripple && !navItem.disabled"
      }],
      key: navItem.model,
      ref: navItem.model,
      refInFor: true,
      staticClass: "vmt__nav__item",
      class: {
        active: navItem.model === _vm.tabItemActive.model,
        disabled: navItem.disabled
      },
      style: _vm.getActiveColor(navItem),
      on: {
        "click": function ($event) {
          $event.preventDefault();
          return _vm.select(navItem);
        }
      }
    }, [_c('VNode', {
      attrs: {
        "node": navItem.nameSlot,
        "name": navItem.name
      }
    })], 1);
  }), _vm._v(" "), _vm.navSlider ? _c('hr', {
    ref: "slider",
    staticClass: "vmt__tab__slider"
  }) : _vm._e()], 2)]), _vm._v(" "), _c('div', {
    staticClass: "vmt__nav__next"
  }, [_vm.pagination.has ? _c('Btn', {
    attrs: {
      "disabled": !_vm.paginateIndicator.next
    },
    on: {
      "click": function ($event) {
        return _vm.paginationTo('next');
      }
    }
  }) : _vm._e()], 1)]);
};

var __vue_staticRenderFns__$2 = [];
/* style */

const __vue_inject_styles__$2 = function (inject) {
  if (!inject) return;
  inject("data-v-7d287132_0", {
    source: ".vmt__nav[data-v-7d287132]{display:flex;justify-content:space-between;align-items:center;vertical-align:middle;max-width:100%;flex:0 1 auto;position:relative;contain:content}.vmt__nav .vmt__nav__prev[data-v-7d287132],.vmt__nav__next[data-v-7d287132]{flex:1 40px;min-width:40px}.vmt__nav__next[data-v-7d287132] .vmt__btn svg{transform:rotate(180deg)}.vmt__nav nav[data-v-7d287132]{position:relative;display:flex;overflow:hidden;flex:1 100%}.vmt__nav__items[data-v-7d287132]{position:relative;display:flex;margin:0;padding:0;flex:1 auto;transition:.3s cubic-bezier(.25,.8,.5,1);height:100%}.vmt__nav__items .vmt__nav__item[data-v-7d287132]{list-style:none;text-align:center;cursor:pointer;padding:.9rem 1rem;letter-spacing:.0892857143em;display:flex;justify-content:center;align-items:center;text-align:center;text-transform:uppercase;font-size:.875rem;font-weight:500;white-space:normal;transition:background .1s ease;position:relative;overflow:hidden;min-width:90px;max-width:360px;user-select:none}.vmt__nav__items .vmt__nav__item[data-v-7d287132]:hover:not(.disabled,.active){background:hsla(0,0%,100%,.09)}.vmt__nav__items .active[data-v-7d287132]:hover{background:hsla(0,0%,100%,.18)}.vmt__nav__items .disabled[data-v-7d287132]{background:#6969694f}.vmt__tab__slider[data-v-7d287132]{height:2px;width:2px;border:none;margin:0;padding:0;bottom:0;position:absolute;transition:left .3s cubic-bezier(.25,.8,.5,1),top .3s cubic-bezier(.25,.8,.5,1)}.vmt__nav--vertical[data-v-7d287132]{flex-direction:column}.vmt__nav--vertical .vmt__nav__items[data-v-7d287132]{flex-direction:column;flex:1 auto;position:relative}.vmt__nav--vertical .vmt__nav__item *[data-v-7d287132]{padding:0;margin:0}.vmt__nav--vertical[data-v-7d287132] .vmt__nav__prev svg{transform:rotate(90deg)}.vmt__nav--vertical[data-v-7d287132] .vmt__nav__next svg{transform:rotate(270deg)}.vmt__nav--vertical .vmt__nav__item[data-v-7d287132]{justify-content:left;padding-top:1.6rem;padding-bottom:1.6rem}.vmt__nav--auto .vmt__nav__item[data-v-7d287132]{flex:1 auto}",
    map: undefined,
    media: undefined
  }), inject("data-v-7d287132_1", {
    source: ".ripple{z-index:2;background-color:hsla(0,0%,100%,.23);border-radius:50%;position:absolute;transform:scale(0);animation:ripple .6s linear}@keyframes ripple{to{transform:scale(2.5);opacity:0}}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


const __vue_scope_id__$2 = "data-v-7d287132";
/* module identifier */

const __vue_module_identifier__$2 = undefined;
/* functional template */

const __vue_is_functional_template__$2 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$2 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$2,
  staticRenderFns: __vue_staticRenderFns__$2
}, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, false, createInjector, undefined, undefined);

const themeFactory = (nav, navItem, navActiveItem, slider, arrow) => ({
  nav,
  navItem,
  navActiveItem,
  slider,
  arrow
});

var $themes = {
  default: themeFactory("#fff", "#000000", "#1867c0", "#1867c0", "#616161"),
  purple: themeFactory("#4A148C", "#BDBDBD", "#fff", "#CE93D8", "#f3f3f3"),
  red: themeFactory("#F44336", "#f3f3f3", "#fff", "#EF9A9A", "#f3f3f3"),
  pink: themeFactory("#E91E63", "#F8BBD0", "#fff", "#F8BBD0", "#f3f3f3"),
  cyan: themeFactory("#00BCD4", "#B2EBF2", "#fff", "#80DEEA", "#f3f3f3"),
  green: themeFactory("#4CAF50", "#C8E6C9", "#fff", "#A5D6A7", "#f3f3f3")
};

//
var script$1 = {
  name: "Tabs",
  components: {
    TabNav: __vue_component__$2
  },
  directives: {
    touch
  },

  provide() {
    return {
      theme: this.getTheme
    };
  },

  props: {
    value: [Number, String],
    theme: {
      type: [Object, String],
      default: "default"
    },
    vertical: Boolean,
    ripple: {
      type: Boolean,
      default: true
    },
    slideDuration: {
      type: [String, Number],
      default: 200
    },
    slideVertical: Boolean,
    slide: {
      type: Boolean,
      default: true
    },
    navAuto: Boolean,
    navSlider: {
      type: Boolean,
      default: true
    },
    noTouch: Boolean
  },
  data: () => ({
    slideSide: "",
    navItems: [],
    tabItemActive: {
      model: "",
      name: "",
      disabled: false
    },
    tabItemIndexes: {
      current: 0,
      last: 0,
      previous: 0
    },
    tabItems: []
  }),
  computed: {
    classes() {
      return {
        tabs: true,
        "tabs--vertical": this.vertical
      };
    },

    transition() {
      return {
        slide: this.slide,
        duration: this.slide ? this.slideDuration : 0,
        vertical: this.slideVertical,
        side: this.slideSide
      };
    },

    getTheme() {
      if (typeof this.theme === "string") {
        return $themes[this.theme] || $themes.default;
      } else if (typeof this.theme === "object" && this.theme) {
        return this.theme;
      }

      return $themes.default;
    }

  },
  watch: {
    tabItemActive(newTabItem, oldTabItem) {
      this.tabItemIndexes.previous = this.finTabIndex(oldTabItem);
      this.tabItemIndexes.current = this.finTabIndex(newTabItem);
      if (!(newTabItem !== null && newTabItem !== void 0 && newTabItem.model)) return;
      this.tabItems[this.tabItemIndexes.current].activeModel = newTabItem.model; // eslint-disable-next-line no-extra-boolean-cast

      if (Boolean(~this.tabItemIndexes.previous)) {
        this.setTabItemTransitionSide();
        this.tabItems[this.tabItemIndexes.previous].activeModel = newTabItem.model;
      }
    },

    value: {
      immediate: true,

      handler(value = 0) {
        this.$nextTick(() => {
          var _this$navItems;

          const navItem = (_this$navItems = this.navItems) === null || _this$navItems === void 0 ? void 0 : _this$navItems[value];
          navItem && this.activeTabItem(navItem);
        });
      }

    }
  },
  methods: {
    register(tabItemInstance) {
      if (this.isTabItemComponent(tabItemInstance)) {
        this.tabItems.push(tabItemInstance);
        this.setNavItem(tabItemInstance);
      }
    },

    unRegister(tabItemInstance) {
      if (this.isTabItemComponent(tabItemInstance)) {
        this.disableTabItem(tabItemInstance.ownNavItemIndex);
        this.tabItems.splice(this.finTabIndex(tabItemInstance), 1);
        this.navItems.splice(tabItemInstance.ownNavItemIndex, 1);
        this.tabItemIndexes.last = this.navItems.length - 1;
      }
    },

    isTabItemComponent({
      $options
    }) {
      return ($options === null || $options === void 0 ? void 0 : $options.name) === "TabItem";
    },

    setNavItem({
      model,
      name,
      disabled,
      $slots
    }) {
      var _$slots$name;

      this.navItems.push({
        model,
        name,
        disabled,
        nameSlot: (_$slots$name = $slots.name) === null || _$slots$name === void 0 ? void 0 : _$slots$name[0]
      });
      this.tabItemIndexes.last = this.navItems.length - 1;
    },

    activeTabItem(tabItem) {
      if (!(tabItem !== null && tabItem !== void 0 && tabItem.disabled)) {
        this.tabItemActive = tabItem;
        this.$emit("input", this.finTabIndex(tabItem));
      }
    },

    disableTabItem(tabItemIndex) {
      const {
        current,
        last
      } = this.tabItemIndexes;

      if (tabItemIndex === current) {
        const nextTabItem = current === last ? current - 1 : current + 1;
        this.activeTabItem(this.navItems[nextTabItem]);
      }
    },

    setTabItemTransitionSide() {
      const {
        current,
        previous
      } = this.tabItemIndexes;
      this.slideSide = current > previous ? "right" : "left";
    },

    switchTabItem(to) {
      if (!this.noTouch) {
        const {
          current,
          last
        } = this.tabItemIndexes;

        const switchTab = count => {
          var _this$navItems2;

          const tabItem = (_this$navItems2 = this.navItems) === null || _this$navItems2 === void 0 ? void 0 : _this$navItems2[current + count];
          tabItem && this.activeTabItem(tabItem);
        };

        to === "next" && current < last && switchTab(1);
        to === "prev" && current > 0 && switchTab(-1);
      }
    },

    finTabIndex(tab) {
      return this.tabItems.findIndex(el => el.model === (tab === null || tab === void 0 ? void 0 : tab.model));
    }

  }
};

/* script */
const __vue_script__$1 = script$1;
/* template */

var __vue_render__$1 = function () {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    class: _vm.classes
  }, [_vm._t("nav", [_c('TabNav', _vm._b({
    on: {
      "select": _vm.activeTabItem
    }
  }, 'TabNav', {
    ripple: _vm.ripple,
    navAuto: _vm.navAuto,
    navItems: _vm.navItems,
    vertical: _vm.vertical,
    navSlider: _vm.navSlider,
    tabItemActive: _vm.tabItemActive
  }, false))], {
    "items": _vm.navItems,
    "active": _vm.tabItemActive
  }), _vm._v(" "), _c('div', {
    directives: [{
      name: "touch",
      rawName: "v-touch",
      value: _vm.switchTabItem,
      expression: "switchTabItem"
    }],
    staticClass: "tabs__content"
  }, [_vm._t("default")], 2)], 2);
};

var __vue_staticRenderFns__$1 = [];
/* style */

const __vue_inject_styles__$1 = function (inject) {
  if (!inject) return;
  inject("data-v-1d334e66_0", {
    source: ".tabs[data-v-1d334e66]{background:#fff;display:flex;flex-direction:column;border-radius:.23rem;height:100%;width:100%}.tabs__content[data-v-1d334e66]{display:flex;position:relative;justify-content:center;align-items:center;overflow:hidden}.tabs--vertical[data-v-1d334e66]{flex-direction:row}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


const __vue_scope_id__$1 = "data-v-1d334e66";
/* module identifier */

const __vue_module_identifier__$1 = undefined;
/* functional template */

const __vue_is_functional_template__$1 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$1 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$1,
  staticRenderFns: __vue_staticRenderFns__$1
}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, createInjector, undefined, undefined);

//
//
//
//
//
//
//
//
var script = {
  name: "TabItem",
  props: {
    name: {
      type: String,
      default: "Tab Item"
    },
    disabled: Boolean
  },
  data: () => ({
    activeModel: "",
    model: Math.random().toString("16").substring("2")
  }),

  mounted() {
    this.$parent.register(this);
  },

  beforeDestroy() {
    this.$parent.unRegister(this);
  },

  computed: {
    transition() {
      return this.$parent.transition || 200;
    },

    isActive() {
      return this.activeModel === this.model && !this.disabled;
    },

    slideDirection() {
      if (!this.transition.slide) return "";

      if (this.transition.vertical) {
        return {
          left: "slide-top",
          right: "slide-bottom"
        }[this.transition.side];
      }

      return {
        left: "slide-left",
        right: "slide-right"
      }[this.transition.side];
    },

    ownNavItemIndex() {
      var _this$$parent;

      return (_this$$parent = this.$parent) === null || _this$$parent === void 0 ? void 0 : _this$$parent.navItems.findIndex(navItem => navItem.model === this.model);
    }

  },
  watch: {
    disabled(payload) {
      var _this$$parent2;

      payload && ((_this$$parent2 = this.$parent) === null || _this$$parent2 === void 0 ? void 0 : _this$$parent2.disableTabItem(this.ownNavItemIndex));
      this.$parent.navItems[this.ownNavItemIndex].disabled = payload;
    }

  },
  methods: {
    beforeEnterHandle(element) {
      element.style.position = "relative";
    },

    leaveHandle(element) {
      element.style.position = "absolute";
    }

  }
};

/* script */
const __vue_script__ = script;
/* template */

var __vue_render__ = function () {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('transition', {
    attrs: {
      "name": _vm.slideDirection
    },
    on: {
      "beforeEnter": _vm.beforeEnterHandle,
      "leave": _vm.leaveHandle
    }
  }, [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: _vm.isActive,
      expression: "isActive"
    }],
    staticClass: "vmt__tab-item",
    style: {
      'transition-duration': _vm.transition.duration + "ms"
    }
  }, [_vm._t("default")], 2)]);
};

var __vue_staticRenderFns__ = [];
/* style */

const __vue_inject_styles__ = function (inject) {
  if (!inject) return;
  inject("data-v-5683d9d1_0", {
    source: ".vmt__tab-item[data-v-5683d9d1]{top:0;left:0;z-index:1;width:100%;height:inherit;background:#fff;transition:transform cubic-bezier(.25,.8,.5,1)}.slide-left-enter[data-v-5683d9d1],.slide-right-leave-to[data-v-5683d9d1]{transform:translateX(-100%)}.slide-left-leave-to[data-v-5683d9d1],.slide-right-enter[data-v-5683d9d1]{transform:translateX(100%)}.slide-bottom-leave-to[data-v-5683d9d1],.slide-top-enter[data-v-5683d9d1]{transform:translateY(-100%)}.slide-bottom-enter[data-v-5683d9d1],.slide-top-leave-to[data-v-5683d9d1]{transform:translateY(100%)}",
    map: undefined,
    media: undefined
  });
};
/* scoped */


const __vue_scope_id__ = "data-v-5683d9d1";
/* module identifier */

const __vue_module_identifier__ = undefined;
/* functional template */

const __vue_is_functional_template__ = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, createInjector, undefined, undefined);

var components = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Tabs: __vue_component__$1,
  TabItem: __vue_component__
});

const install = function installVueMaterialTabs(Vue) {
  Object.entries(components).forEach(([componentName, component]) => {
    Vue.component(componentName, component);
  });
};

export default install;
export { __vue_component__ as TabItem, __vue_component__$1 as Tabs };
